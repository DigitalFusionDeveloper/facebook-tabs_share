<!-- html --> 

  <%= form(@locator, :url => request.fullpath, :html => {:id => 'locator-form', :style => 'background-color:white;color:#333;padding:2em;'}) do |f| %> 

    <%= f.messages %>

    <table style='width:100%;'>
      <tr>
        <td>
          <h3 style='color:#999;'>
            Thirsty? Find <%= @brand.title %> below.
          </h3>
        </td>
      </tr>

      <!-- search input fields -->
      <tr>
        <td>

          <%= f.label :address %>
          <%= f.textarea :address, :id => :address, :style => 'width:50%;height:4em;', :autofocus => :autofocus %>
          
          <%= f.input :ll, :id => :ll, :type => :hidden %>
          <%= f.input :formatted_address, :id => 'formatted-address', :type => :hidden %>

          <br>
          <%= f.submit :value => 'Search', :id => 'search-submit', :title => 'click to search or to use your current location' %>
        </td>
      </tr>

      <% if @locator.types.size > 1 %>

      <tr>
        <td>

          <br>
          <% @locator.types.each do |type| %>
            <%= f.checkbox :types, type, :checked => :checked %>
            <%= f.label(:types, type, :style => 'display:inline'){ 'Include ' + @locator.label_for(type) } %>
            <br>
          <% end %>

        </td>
      </tr>

      <% end %> 

      <tr>
        <td>
          <br>
          <div style='font-style:italic;color:#999;'>
            * Inventories can fluctuate. We recommend you contact the retailer to ensure stock of the beer
          </div>
        </td>
      </tr>
    </table>


  <% end %>


<!-- js -->

  <%= javascript_include_tag 'geoPosition' %>

  <script>
    jQuery(function(){
    //
      var locator_form       = jQuery('#locator-form');

      var address_input           = locator_form.find('#address');
      var ll_input                = locator_form.find('#ll');
      var formatted_address_input = locator_form.find('#formatted-address');
      var email_input             = locator_form.find('#email');

      var search_submit      = locator_form.find('#search-submit');

    //
      geo_locate = function(address, callback){
        Brand.geo_locate({
          'address' : address,
          'complete' : function(data){
            var loc;

            var results = data ? (data['results'] || data) : [];

//console.dir(results);
            try {
              loc = results[0].geometry.location;
            } catch(e) { loc = null };

            if(loc){
              try {
                lat = loc.lat(); //['lat']||loc['nb'];
                lng = loc.lng(); //['lng']||loc['ob'];
                var ll = [lat, lng].join(', ');
                ll_input.val(ll);
//console.log(ll);
//console.log(ll_input.val());
              } catch(e) { };
            }

            var formatted_address;
            try {
              formatted_address = eval('results[0].formatted_address') || {};
            } catch(e) { formatted_address = null };

            if(formatted_address){
              formatted_address_input.val(formatted_address);
            }

            callback && callback();
          }
        });
      };

    //
      address_input.keydown(function(event){
        if(event.keyCode == 13) {
          //event.preventDefault();
          //search_submit.click();
          //return false;
        }
        true;
      });

    //
      search_submit.click(function(){
        var address = address_input.val();

        if( address && (ll_input.data('address') != address) ){
//console.log('========');
//console.log(address);
//console.log(ll_input.data('address'));
          ll_input.data('address', address);
          geo_locate(address, function(){ search_submit.click() });
          return false;
        }

//return false;

        if( address_input.val() || ll_input.val() ){
          return true;
        } else {
          //geo_position.callbacks.push( function(){ setTimeout( function(){ search_submit.click() }, 1000) });
          geo_position.callbacks.push( 
            function(){
              App.flash("<em>Click 'Search' again if the auto-detected location seems correct!</em>", {'class' : 'alert-success'});
            }
          );
          geo_position();
          return false;
        }
      });

    //
      var geo_position = function(){
        if(geoPosition.init()){
        //
          var complete = function(data){
            var formatted_address;

            var results = data ? (data['results'] || data) : [];

            try {
              formatted_address = results[0].formatted_address;
            } catch(e) { formatted_address = null };

            if(formatted_address){
              formatted_address_input.val(formatted_address);
            }

            try {
              var parts = formatted_address.split(',');
              while(parts.length > 3){
                parts.shift();
              };
              var approximate_address = parts.join(', ');
              address_input.val(approximate_address);
              ll_input.data('address', approximate_address);
            } catch(e){
              address_input.val(ll);
              ll_input.data('address', ll);
            };

            while(geo_position.callbacks.length > 0){
              var cb = geo_position.callbacks.shift();
              cb(data || {});
            };
          };

        //
          var success = 
            function(response){
              var coords = response.coords;
              var lat = coords['latitude'].round(2);
              var lng = coords['longitude'].round(2);
              var ll = [lat, lng].join(', ');

              ll_input.val(ll);
//console.log(ll);
//console.log(ll_input.val());

              Brand.geo_locate({
                'address' : ll,
                'complete' : complete
              });
            };

        //
          var error = complete;

          try{
            geoPosition.getCurrentPosition(success, error);
          } catch(e) {
            complete();
          };
        } else {
          alert('Sorry, your browser does not support this feature.');
        }
      };
      geo_position.callbacks = [];

    });
  </script>
